#define makeMFNSingleIncrementors1(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
} } 


#define makeMFNSingleIncrementors2(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
} } } 


#define makeMFNSingleIncrementors3(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
} } } } 


#define makeMFNSingleIncrementors4(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } 


#define makeMFNSingleIncrementors5(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } 


#define makeMFNSingleIncrementors6(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } 


#define makeMFNSingleIncrementors7(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } 


#define makeMFNSingleIncrementors8(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } 


#define makeMFNSingleIncrementors9(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } 


#define makeMFNSingleIncrementors10(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } 


#define makeMFNSingleIncrementors11(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } 


#define makeMFNSingleIncrementors12(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } 


#define makeMFNSingleIncrementors13(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors14(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors15(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors16(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors17(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors18(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors19(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors20(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors21(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors22(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors23(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors24(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors25(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors26(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors27(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors28(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors29(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors30(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors31(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors32(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors33(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors34(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors35(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors36(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors37(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors38(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors39(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors40(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors41(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors42(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors43(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors44(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                      passOffset = charsetReverse[(b10 >> 24) & 0xff]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors45(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                      passOffset = charsetReverse[(b10 >> 24) & 0xff]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                        passOffset = charsetReverse[(b11 >> 0) & 0xff]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[0] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors46(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                      passOffset = charsetReverse[(b10 >> 24) & 0xff]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                        passOffset = charsetReverse[(b11 >> 0) & 0xff]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                          passOffset = charsetReverse[(b11 >> 8) & 0xff]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[0] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors47(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                      passOffset = charsetReverse[(b10 >> 24) & 0xff]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                        passOffset = charsetReverse[(b11 >> 0) & 0xff]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                          passOffset = charsetReverse[(b11 >> 8) & 0xff]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                            passOffset = charsetReverse[(b11 >> 16) & 0xff]; \
                                                                                            b11 &= 0xff00ffff;\
                                                                                            passOffset++;\
                                                                                            b11 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                                              b11 &= 0xff00ffff;\
                                                                                              b11 |= (uint32_t)(charsetForward[0] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNSingleIncrementors48(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[(b0 >> 0) & 0xff]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[0] << 0);\
  passOffset = charsetReverse[(b0 >> 8) & 0xff]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[passOffset] << 8);\
  if (passOffset >= charsetLengths[0]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[0] << 8);\
    passOffset = charsetReverse[(b0 >> 16) & 0xff]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[passOffset] << 16);\
    if (passOffset >= charsetLengths[0]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[0] << 16);\
      passOffset = charsetReverse[(b0 >> 24) & 0xff]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[passOffset] << 24);\
      if (passOffset >= charsetLengths[0]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[0] << 24);\
        passOffset = charsetReverse[(b1 >> 0) & 0xff]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[passOffset] << 0);\
        if (passOffset >= charsetLengths[0]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[0] << 0);\
          passOffset = charsetReverse[(b1 >> 8) & 0xff]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[passOffset] << 8);\
          if (passOffset >= charsetLengths[0]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[0] << 8);\
            passOffset = charsetReverse[(b1 >> 16) & 0xff]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[passOffset] << 16);\
            if (passOffset >= charsetLengths[0]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[0] << 16);\
              passOffset = charsetReverse[(b1 >> 24) & 0xff]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[passOffset] << 24);\
              if (passOffset >= charsetLengths[0]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[0] << 24);\
                passOffset = charsetReverse[(b2 >> 0) & 0xff]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[passOffset] << 0);\
                if (passOffset >= charsetLengths[0]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[0] << 0);\
                  passOffset = charsetReverse[(b2 >> 8) & 0xff]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[passOffset] << 8);\
                  if (passOffset >= charsetLengths[0]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[0] << 8);\
                    passOffset = charsetReverse[(b2 >> 16) & 0xff]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[passOffset] << 16);\
                    if (passOffset >= charsetLengths[0]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[0] << 16);\
                      passOffset = charsetReverse[(b2 >> 24) & 0xff]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[passOffset] << 24);\
                      if (passOffset >= charsetLengths[0]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[0] << 24);\
                        passOffset = charsetReverse[(b3 >> 0) & 0xff]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[passOffset] << 0);\
                        if (passOffset >= charsetLengths[0]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[0] << 0);\
                          passOffset = charsetReverse[(b3 >> 8) & 0xff]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[passOffset] << 8);\
                          if (passOffset >= charsetLengths[0]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[0] << 8);\
                            passOffset = charsetReverse[(b3 >> 16) & 0xff]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[passOffset] << 16);\
                            if (passOffset >= charsetLengths[0]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[0] << 16);\
                              passOffset = charsetReverse[(b3 >> 24) & 0xff]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[passOffset] << 24);\
                              if (passOffset >= charsetLengths[0]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[0] << 24);\
                                passOffset = charsetReverse[(b4 >> 0) & 0xff]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                if (passOffset >= charsetLengths[0]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[0] << 0);\
                                  passOffset = charsetReverse[(b4 >> 8) & 0xff]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                  if (passOffset >= charsetLengths[0]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[0] << 8);\
                                    passOffset = charsetReverse[(b4 >> 16) & 0xff]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                    if (passOffset >= charsetLengths[0]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[0] << 16);\
                                      passOffset = charsetReverse[(b4 >> 24) & 0xff]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                      if (passOffset >= charsetLengths[0]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[0] << 24);\
                                        passOffset = charsetReverse[(b5 >> 0) & 0xff]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                        if (passOffset >= charsetLengths[0]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[0] << 0);\
                                          passOffset = charsetReverse[(b5 >> 8) & 0xff]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                          if (passOffset >= charsetLengths[0]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[0] << 8);\
                                            passOffset = charsetReverse[(b5 >> 16) & 0xff]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                            if (passOffset >= charsetLengths[0]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[0] << 16);\
                                              passOffset = charsetReverse[(b5 >> 24) & 0xff]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                              if (passOffset >= charsetLengths[0]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[0] << 24);\
                                                passOffset = charsetReverse[(b6 >> 0) & 0xff]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                if (passOffset >= charsetLengths[0]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[0] << 0);\
                                                  passOffset = charsetReverse[(b6 >> 8) & 0xff]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[0]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[0] << 8);\
                                                    passOffset = charsetReverse[(b6 >> 16) & 0xff]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[0]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[0] << 16);\
                                                      passOffset = charsetReverse[(b6 >> 24) & 0xff]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[0]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[0] << 24);\
                                                        passOffset = charsetReverse[(b7 >> 0) & 0xff]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[0]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[0] << 0);\
                                                          passOffset = charsetReverse[(b7 >> 8) & 0xff]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[0]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[0] << 8);\
                                                            passOffset = charsetReverse[(b7 >> 16) & 0xff]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[0]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[0] << 16);\
                                                              passOffset = charsetReverse[(b7 >> 24) & 0xff]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[0]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[0] << 24);\
                                                                passOffset = charsetReverse[(b8 >> 0) & 0xff]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[0]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[0] << 0);\
                                                                  passOffset = charsetReverse[(b8 >> 8) & 0xff]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[0] << 8);\
                                                                    passOffset = charsetReverse[(b8 >> 16) & 0xff]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[0] << 16);\
                                                                      passOffset = charsetReverse[(b8 >> 24) & 0xff]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[0] << 24);\
                                                                        passOffset = charsetReverse[(b9 >> 0) & 0xff]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[0] << 0);\
                                                                          passOffset = charsetReverse[(b9 >> 8) & 0xff]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[0] << 8);\
                                                                            passOffset = charsetReverse[(b9 >> 16) & 0xff]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[0] << 16);\
                                                                              passOffset = charsetReverse[(b9 >> 24) & 0xff]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                passOffset = charsetReverse[(b10 >> 0) & 0xff]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[0]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                  passOffset = charsetReverse[(b10 >> 8) & 0xff]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[0]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                    passOffset = charsetReverse[(b10 >> 16) & 0xff]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[0]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                      passOffset = charsetReverse[(b10 >> 24) & 0xff]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[0]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[0] << 24);\
                                                                                        passOffset = charsetReverse[(b11 >> 0) & 0xff]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[0]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[0] << 0);\
                                                                                          passOffset = charsetReverse[(b11 >> 8) & 0xff]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[0]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[0] << 8);\
                                                                                            passOffset = charsetReverse[(b11 >> 16) & 0xff]; \
                                                                                            b11 &= 0xff00ffff;\
                                                                                            passOffset++;\
                                                                                            b11 |= (uint32_t)(charsetForward[passOffset] << 16);\
                                                                                            if (passOffset >= charsetLengths[0]) { \
                                                                                              b11 &= 0xff00ffff;\
                                                                                              b11 |= (uint32_t)(charsetForward[0] << 16);\
                                                                                              passOffset = charsetReverse[(b11 >> 24) & 0xff]; \
                                                                                              b11 &= 0x00ffffff;\
                                                                                              passOffset++;\
                                                                                              b11 |= (uint32_t)(charsetForward[passOffset] << 24);\
                                                                                              if (passOffset >= charsetLengths[0]) { \
                                                                                                b11 &= 0x00ffffff;\
                                                                                                b11 |= (uint32_t)(charsetForward[0] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors1(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
} } 


#define makeMFNMultipleIncrementors2(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
} } } 


#define makeMFNMultipleIncrementors3(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
} } } } 


#define makeMFNMultipleIncrementors4(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
} } } } } 


#define makeMFNMultipleIncrementors5(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
} } } } } } 


#define makeMFNMultipleIncrementors6(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
} } } } } } } 


#define makeMFNMultipleIncrementors7(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
} } } } } } } } 


#define makeMFNMultipleIncrementors8(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
} } } } } } } } } 


#define makeMFNMultipleIncrementors9(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
} } } } } } } } } } 


#define makeMFNMultipleIncrementors10(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
} } } } } } } } } } } 


#define makeMFNMultipleIncrementors11(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
} } } } } } } } } } } } 


#define makeMFNMultipleIncrementors12(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
} } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors13(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
} } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors14(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
} } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors15(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
} } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors16(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
} } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors17(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
} } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors18(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
} } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors19(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
} } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors20(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
} } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors21(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors22(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors23(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors24(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors25(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors26(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors27(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors28(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors29(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors30(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors31(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors32(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors33(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors34(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors35(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors36(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors37(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors38(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors39(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors40(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors41(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors42(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors43(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors44(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
                                                                                      passOffset = charsetReverse[((128 * 43) + (b10 >> 24) & 0xff)]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 43) + passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[43]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[(128 * 43)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors45(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
                                                                                      passOffset = charsetReverse[((128 * 43) + (b10 >> 24) & 0xff)]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 43) + passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[43]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[(128 * 43)] << 24);\
                                                                                        passOffset = charsetReverse[((128 * 44) + (b11 >> 0) & 0xff)]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[(128 * 44) + passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[44]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 44)] << 0);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors46(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
                                                                                      passOffset = charsetReverse[((128 * 43) + (b10 >> 24) & 0xff)]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 43) + passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[43]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[(128 * 43)] << 24);\
                                                                                        passOffset = charsetReverse[((128 * 44) + (b11 >> 0) & 0xff)]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[(128 * 44) + passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[44]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 44)] << 0);\
                                                                                          passOffset = charsetReverse[((128 * 45) + (b11 >> 8) & 0xff)]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 45) + passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[45]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[(128 * 45)] << 8);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors47(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
                                                                                      passOffset = charsetReverse[((128 * 43) + (b10 >> 24) & 0xff)]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 43) + passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[43]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[(128 * 43)] << 24);\
                                                                                        passOffset = charsetReverse[((128 * 44) + (b11 >> 0) & 0xff)]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[(128 * 44) + passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[44]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 44)] << 0);\
                                                                                          passOffset = charsetReverse[((128 * 45) + (b11 >> 8) & 0xff)]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 45) + passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[45]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[(128 * 45)] << 8);\
                                                                                            passOffset = charsetReverse[((128 * 46) + (b11 >> 16) & 0xff)]; \
                                                                                            b11 &= 0xff00ffff;\
                                                                                            passOffset++;\
                                                                                            b11 |= (uint32_t)(charsetForward[(128 * 46) + passOffset] << 16);\
                                                                                            if (passOffset >= charsetLengths[46]) { \
                                                                                              b11 &= 0xff00ffff;\
                                                                                              b11 |= (uint32_t)(charsetForward[(128 * 46)] << 16);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


#define makeMFNMultipleIncrementors48(charsetForward, charsetReverse, charsetLengths) {\
passOffset = charsetReverse[((128 * 0) + (b0 >> 0) & 0xff)]; \
b0 &= 0xffffff00;\
passOffset++;\
b0 |= (uint32_t)(charsetForward[(128 * 0) + passOffset] << 0);\
if (passOffset >= charsetLengths[0]) { \
  b0 &= 0xffffff00;\
  b0 |= (uint32_t)(charsetForward[(128 * 0)] << 0);\
  passOffset = charsetReverse[((128 * 1) + (b0 >> 8) & 0xff)]; \
  b0 &= 0xffff00ff;\
  passOffset++;\
  b0 |= (uint32_t)(charsetForward[(128 * 1) + passOffset] << 8);\
  if (passOffset >= charsetLengths[1]) { \
    b0 &= 0xffff00ff;\
    b0 |= (uint32_t)(charsetForward[(128 * 1)] << 8);\
    passOffset = charsetReverse[((128 * 2) + (b0 >> 16) & 0xff)]; \
    b0 &= 0xff00ffff;\
    passOffset++;\
    b0 |= (uint32_t)(charsetForward[(128 * 2) + passOffset] << 16);\
    if (passOffset >= charsetLengths[2]) { \
      b0 &= 0xff00ffff;\
      b0 |= (uint32_t)(charsetForward[(128 * 2)] << 16);\
      passOffset = charsetReverse[((128 * 3) + (b0 >> 24) & 0xff)]; \
      b0 &= 0x00ffffff;\
      passOffset++;\
      b0 |= (uint32_t)(charsetForward[(128 * 3) + passOffset] << 24);\
      if (passOffset >= charsetLengths[3]) { \
        b0 &= 0x00ffffff;\
        b0 |= (uint32_t)(charsetForward[(128 * 3)] << 24);\
        passOffset = charsetReverse[((128 * 4) + (b1 >> 0) & 0xff)]; \
        b1 &= 0xffffff00;\
        passOffset++;\
        b1 |= (uint32_t)(charsetForward[(128 * 4) + passOffset] << 0);\
        if (passOffset >= charsetLengths[4]) { \
          b1 &= 0xffffff00;\
          b1 |= (uint32_t)(charsetForward[(128 * 4)] << 0);\
          passOffset = charsetReverse[((128 * 5) + (b1 >> 8) & 0xff)]; \
          b1 &= 0xffff00ff;\
          passOffset++;\
          b1 |= (uint32_t)(charsetForward[(128 * 5) + passOffset] << 8);\
          if (passOffset >= charsetLengths[5]) { \
            b1 &= 0xffff00ff;\
            b1 |= (uint32_t)(charsetForward[(128 * 5)] << 8);\
            passOffset = charsetReverse[((128 * 6) + (b1 >> 16) & 0xff)]; \
            b1 &= 0xff00ffff;\
            passOffset++;\
            b1 |= (uint32_t)(charsetForward[(128 * 6) + passOffset] << 16);\
            if (passOffset >= charsetLengths[6]) { \
              b1 &= 0xff00ffff;\
              b1 |= (uint32_t)(charsetForward[(128 * 6)] << 16);\
              passOffset = charsetReverse[((128 * 7) + (b1 >> 24) & 0xff)]; \
              b1 &= 0x00ffffff;\
              passOffset++;\
              b1 |= (uint32_t)(charsetForward[(128 * 7) + passOffset] << 24);\
              if (passOffset >= charsetLengths[7]) { \
                b1 &= 0x00ffffff;\
                b1 |= (uint32_t)(charsetForward[(128 * 7)] << 24);\
                passOffset = charsetReverse[((128 * 8) + (b2 >> 0) & 0xff)]; \
                b2 &= 0xffffff00;\
                passOffset++;\
                b2 |= (uint32_t)(charsetForward[(128 * 8) + passOffset] << 0);\
                if (passOffset >= charsetLengths[8]) { \
                  b2 &= 0xffffff00;\
                  b2 |= (uint32_t)(charsetForward[(128 * 8)] << 0);\
                  passOffset = charsetReverse[((128 * 9) + (b2 >> 8) & 0xff)]; \
                  b2 &= 0xffff00ff;\
                  passOffset++;\
                  b2 |= (uint32_t)(charsetForward[(128 * 9) + passOffset] << 8);\
                  if (passOffset >= charsetLengths[9]) { \
                    b2 &= 0xffff00ff;\
                    b2 |= (uint32_t)(charsetForward[(128 * 9)] << 8);\
                    passOffset = charsetReverse[((128 * 10) + (b2 >> 16) & 0xff)]; \
                    b2 &= 0xff00ffff;\
                    passOffset++;\
                    b2 |= (uint32_t)(charsetForward[(128 * 10) + passOffset] << 16);\
                    if (passOffset >= charsetLengths[10]) { \
                      b2 &= 0xff00ffff;\
                      b2 |= (uint32_t)(charsetForward[(128 * 10)] << 16);\
                      passOffset = charsetReverse[((128 * 11) + (b2 >> 24) & 0xff)]; \
                      b2 &= 0x00ffffff;\
                      passOffset++;\
                      b2 |= (uint32_t)(charsetForward[(128 * 11) + passOffset] << 24);\
                      if (passOffset >= charsetLengths[11]) { \
                        b2 &= 0x00ffffff;\
                        b2 |= (uint32_t)(charsetForward[(128 * 11)] << 24);\
                        passOffset = charsetReverse[((128 * 12) + (b3 >> 0) & 0xff)]; \
                        b3 &= 0xffffff00;\
                        passOffset++;\
                        b3 |= (uint32_t)(charsetForward[(128 * 12) + passOffset] << 0);\
                        if (passOffset >= charsetLengths[12]) { \
                          b3 &= 0xffffff00;\
                          b3 |= (uint32_t)(charsetForward[(128 * 12)] << 0);\
                          passOffset = charsetReverse[((128 * 13) + (b3 >> 8) & 0xff)]; \
                          b3 &= 0xffff00ff;\
                          passOffset++;\
                          b3 |= (uint32_t)(charsetForward[(128 * 13) + passOffset] << 8);\
                          if (passOffset >= charsetLengths[13]) { \
                            b3 &= 0xffff00ff;\
                            b3 |= (uint32_t)(charsetForward[(128 * 13)] << 8);\
                            passOffset = charsetReverse[((128 * 14) + (b3 >> 16) & 0xff)]; \
                            b3 &= 0xff00ffff;\
                            passOffset++;\
                            b3 |= (uint32_t)(charsetForward[(128 * 14) + passOffset] << 16);\
                            if (passOffset >= charsetLengths[14]) { \
                              b3 &= 0xff00ffff;\
                              b3 |= (uint32_t)(charsetForward[(128 * 14)] << 16);\
                              passOffset = charsetReverse[((128 * 15) + (b3 >> 24) & 0xff)]; \
                              b3 &= 0x00ffffff;\
                              passOffset++;\
                              b3 |= (uint32_t)(charsetForward[(128 * 15) + passOffset] << 24);\
                              if (passOffset >= charsetLengths[15]) { \
                                b3 &= 0x00ffffff;\
                                b3 |= (uint32_t)(charsetForward[(128 * 15)] << 24);\
                                passOffset = charsetReverse[((128 * 16) + (b4 >> 0) & 0xff)]; \
                                b4 &= 0xffffff00;\
                                passOffset++;\
                                b4 |= (uint32_t)(charsetForward[(128 * 16) + passOffset] << 0);\
                                if (passOffset >= charsetLengths[16]) { \
                                  b4 &= 0xffffff00;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 16)] << 0);\
                                  passOffset = charsetReverse[((128 * 17) + (b4 >> 8) & 0xff)]; \
                                  b4 &= 0xffff00ff;\
                                  passOffset++;\
                                  b4 |= (uint32_t)(charsetForward[(128 * 17) + passOffset] << 8);\
                                  if (passOffset >= charsetLengths[17]) { \
                                    b4 &= 0xffff00ff;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 17)] << 8);\
                                    passOffset = charsetReverse[((128 * 18) + (b4 >> 16) & 0xff)]; \
                                    b4 &= 0xff00ffff;\
                                    passOffset++;\
                                    b4 |= (uint32_t)(charsetForward[(128 * 18) + passOffset] << 16);\
                                    if (passOffset >= charsetLengths[18]) { \
                                      b4 &= 0xff00ffff;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 18)] << 16);\
                                      passOffset = charsetReverse[((128 * 19) + (b4 >> 24) & 0xff)]; \
                                      b4 &= 0x00ffffff;\
                                      passOffset++;\
                                      b4 |= (uint32_t)(charsetForward[(128 * 19) + passOffset] << 24);\
                                      if (passOffset >= charsetLengths[19]) { \
                                        b4 &= 0x00ffffff;\
                                        b4 |= (uint32_t)(charsetForward[(128 * 19)] << 24);\
                                        passOffset = charsetReverse[((128 * 20) + (b5 >> 0) & 0xff)]; \
                                        b5 &= 0xffffff00;\
                                        passOffset++;\
                                        b5 |= (uint32_t)(charsetForward[(128 * 20) + passOffset] << 0);\
                                        if (passOffset >= charsetLengths[20]) { \
                                          b5 &= 0xffffff00;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 20)] << 0);\
                                          passOffset = charsetReverse[((128 * 21) + (b5 >> 8) & 0xff)]; \
                                          b5 &= 0xffff00ff;\
                                          passOffset++;\
                                          b5 |= (uint32_t)(charsetForward[(128 * 21) + passOffset] << 8);\
                                          if (passOffset >= charsetLengths[21]) { \
                                            b5 &= 0xffff00ff;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 21)] << 8);\
                                            passOffset = charsetReverse[((128 * 22) + (b5 >> 16) & 0xff)]; \
                                            b5 &= 0xff00ffff;\
                                            passOffset++;\
                                            b5 |= (uint32_t)(charsetForward[(128 * 22) + passOffset] << 16);\
                                            if (passOffset >= charsetLengths[22]) { \
                                              b5 &= 0xff00ffff;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 22)] << 16);\
                                              passOffset = charsetReverse[((128 * 23) + (b5 >> 24) & 0xff)]; \
                                              b5 &= 0x00ffffff;\
                                              passOffset++;\
                                              b5 |= (uint32_t)(charsetForward[(128 * 23) + passOffset] << 24);\
                                              if (passOffset >= charsetLengths[23]) { \
                                                b5 &= 0x00ffffff;\
                                                b5 |= (uint32_t)(charsetForward[(128 * 23)] << 24);\
                                                passOffset = charsetReverse[((128 * 24) + (b6 >> 0) & 0xff)]; \
                                                b6 &= 0xffffff00;\
                                                passOffset++;\
                                                b6 |= (uint32_t)(charsetForward[(128 * 24) + passOffset] << 0);\
                                                if (passOffset >= charsetLengths[24]) { \
                                                  b6 &= 0xffffff00;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 24)] << 0);\
                                                  passOffset = charsetReverse[((128 * 25) + (b6 >> 8) & 0xff)]; \
                                                  b6 &= 0xffff00ff;\
                                                  passOffset++;\
                                                  b6 |= (uint32_t)(charsetForward[(128 * 25) + passOffset] << 8);\
                                                  if (passOffset >= charsetLengths[25]) { \
                                                    b6 &= 0xffff00ff;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 25)] << 8);\
                                                    passOffset = charsetReverse[((128 * 26) + (b6 >> 16) & 0xff)]; \
                                                    b6 &= 0xff00ffff;\
                                                    passOffset++;\
                                                    b6 |= (uint32_t)(charsetForward[(128 * 26) + passOffset] << 16);\
                                                    if (passOffset >= charsetLengths[26]) { \
                                                      b6 &= 0xff00ffff;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 26)] << 16);\
                                                      passOffset = charsetReverse[((128 * 27) + (b6 >> 24) & 0xff)]; \
                                                      b6 &= 0x00ffffff;\
                                                      passOffset++;\
                                                      b6 |= (uint32_t)(charsetForward[(128 * 27) + passOffset] << 24);\
                                                      if (passOffset >= charsetLengths[27]) { \
                                                        b6 &= 0x00ffffff;\
                                                        b6 |= (uint32_t)(charsetForward[(128 * 27)] << 24);\
                                                        passOffset = charsetReverse[((128 * 28) + (b7 >> 0) & 0xff)]; \
                                                        b7 &= 0xffffff00;\
                                                        passOffset++;\
                                                        b7 |= (uint32_t)(charsetForward[(128 * 28) + passOffset] << 0);\
                                                        if (passOffset >= charsetLengths[28]) { \
                                                          b7 &= 0xffffff00;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 28)] << 0);\
                                                          passOffset = charsetReverse[((128 * 29) + (b7 >> 8) & 0xff)]; \
                                                          b7 &= 0xffff00ff;\
                                                          passOffset++;\
                                                          b7 |= (uint32_t)(charsetForward[(128 * 29) + passOffset] << 8);\
                                                          if (passOffset >= charsetLengths[29]) { \
                                                            b7 &= 0xffff00ff;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 29)] << 8);\
                                                            passOffset = charsetReverse[((128 * 30) + (b7 >> 16) & 0xff)]; \
                                                            b7 &= 0xff00ffff;\
                                                            passOffset++;\
                                                            b7 |= (uint32_t)(charsetForward[(128 * 30) + passOffset] << 16);\
                                                            if (passOffset >= charsetLengths[30]) { \
                                                              b7 &= 0xff00ffff;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 30)] << 16);\
                                                              passOffset = charsetReverse[((128 * 31) + (b7 >> 24) & 0xff)]; \
                                                              b7 &= 0x00ffffff;\
                                                              passOffset++;\
                                                              b7 |= (uint32_t)(charsetForward[(128 * 31) + passOffset] << 24);\
                                                              if (passOffset >= charsetLengths[31]) { \
                                                                b7 &= 0x00ffffff;\
                                                                b7 |= (uint32_t)(charsetForward[(128 * 31)] << 24);\
                                                                passOffset = charsetReverse[((128 * 32) + (b8 >> 0) & 0xff)]; \
                                                                b8 &= 0xffffff00;\
                                                                passOffset++;\
                                                                b8 |= (uint32_t)(charsetForward[(128 * 32) + passOffset] << 0);\
                                                                if (passOffset >= charsetLengths[32]) { \
                                                                  b8 &= 0xffffff00;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 32)] << 0);\
                                                                  passOffset = charsetReverse[((128 * 33) + (b8 >> 8) & 0xff)]; \
                                                                  b8 &= 0xffff00ff;\
                                                                  passOffset++;\
                                                                  b8 |= (uint32_t)(charsetForward[(128 * 33) + passOffset] << 8);\
                                                                  if (passOffset >= charsetLengths[33]) { \
                                                                    b8 &= 0xffff00ff;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 33)] << 8);\
                                                                    passOffset = charsetReverse[((128 * 34) + (b8 >> 16) & 0xff)]; \
                                                                    b8 &= 0xff00ffff;\
                                                                    passOffset++;\
                                                                    b8 |= (uint32_t)(charsetForward[(128 * 34) + passOffset] << 16);\
                                                                    if (passOffset >= charsetLengths[34]) { \
                                                                      b8 &= 0xff00ffff;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 34)] << 16);\
                                                                      passOffset = charsetReverse[((128 * 35) + (b8 >> 24) & 0xff)]; \
                                                                      b8 &= 0x00ffffff;\
                                                                      passOffset++;\
                                                                      b8 |= (uint32_t)(charsetForward[(128 * 35) + passOffset] << 24);\
                                                                      if (passOffset >= charsetLengths[35]) { \
                                                                        b8 &= 0x00ffffff;\
                                                                        b8 |= (uint32_t)(charsetForward[(128 * 35)] << 24);\
                                                                        passOffset = charsetReverse[((128 * 36) + (b9 >> 0) & 0xff)]; \
                                                                        b9 &= 0xffffff00;\
                                                                        passOffset++;\
                                                                        b9 |= (uint32_t)(charsetForward[(128 * 36) + passOffset] << 0);\
                                                                        if (passOffset >= charsetLengths[36]) { \
                                                                          b9 &= 0xffffff00;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 36)] << 0);\
                                                                          passOffset = charsetReverse[((128 * 37) + (b9 >> 8) & 0xff)]; \
                                                                          b9 &= 0xffff00ff;\
                                                                          passOffset++;\
                                                                          b9 |= (uint32_t)(charsetForward[(128 * 37) + passOffset] << 8);\
                                                                          if (passOffset >= charsetLengths[37]) { \
                                                                            b9 &= 0xffff00ff;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 37)] << 8);\
                                                                            passOffset = charsetReverse[((128 * 38) + (b9 >> 16) & 0xff)]; \
                                                                            b9 &= 0xff00ffff;\
                                                                            passOffset++;\
                                                                            b9 |= (uint32_t)(charsetForward[(128 * 38) + passOffset] << 16);\
                                                                            if (passOffset >= charsetLengths[38]) { \
                                                                              b9 &= 0xff00ffff;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 38)] << 16);\
                                                                              passOffset = charsetReverse[((128 * 39) + (b9 >> 24) & 0xff)]; \
                                                                              b9 &= 0x00ffffff;\
                                                                              passOffset++;\
                                                                              b9 |= (uint32_t)(charsetForward[(128 * 39) + passOffset] << 24);\
                                                                              if (passOffset >= charsetLengths[39]) { \
                                                                                b9 &= 0x00ffffff;\
                                                                                b9 |= (uint32_t)(charsetForward[(128 * 39)] << 24);\
                                                                                passOffset = charsetReverse[((128 * 40) + (b10 >> 0) & 0xff)]; \
                                                                                b10 &= 0xffffff00;\
                                                                                passOffset++;\
                                                                                b10 |= (uint32_t)(charsetForward[(128 * 40) + passOffset] << 0);\
                                                                                if (passOffset >= charsetLengths[40]) { \
                                                                                  b10 &= 0xffffff00;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 40)] << 0);\
                                                                                  passOffset = charsetReverse[((128 * 41) + (b10 >> 8) & 0xff)]; \
                                                                                  b10 &= 0xffff00ff;\
                                                                                  passOffset++;\
                                                                                  b10 |= (uint32_t)(charsetForward[(128 * 41) + passOffset] << 8);\
                                                                                  if (passOffset >= charsetLengths[41]) { \
                                                                                    b10 &= 0xffff00ff;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 41)] << 8);\
                                                                                    passOffset = charsetReverse[((128 * 42) + (b10 >> 16) & 0xff)]; \
                                                                                    b10 &= 0xff00ffff;\
                                                                                    passOffset++;\
                                                                                    b10 |= (uint32_t)(charsetForward[(128 * 42) + passOffset] << 16);\
                                                                                    if (passOffset >= charsetLengths[42]) { \
                                                                                      b10 &= 0xff00ffff;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 42)] << 16);\
                                                                                      passOffset = charsetReverse[((128 * 43) + (b10 >> 24) & 0xff)]; \
                                                                                      b10 &= 0x00ffffff;\
                                                                                      passOffset++;\
                                                                                      b10 |= (uint32_t)(charsetForward[(128 * 43) + passOffset] << 24);\
                                                                                      if (passOffset >= charsetLengths[43]) { \
                                                                                        b10 &= 0x00ffffff;\
                                                                                        b10 |= (uint32_t)(charsetForward[(128 * 43)] << 24);\
                                                                                        passOffset = charsetReverse[((128 * 44) + (b11 >> 0) & 0xff)]; \
                                                                                        b11 &= 0xffffff00;\
                                                                                        passOffset++;\
                                                                                        b11 |= (uint32_t)(charsetForward[(128 * 44) + passOffset] << 0);\
                                                                                        if (passOffset >= charsetLengths[44]) { \
                                                                                          b11 &= 0xffffff00;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 44)] << 0);\
                                                                                          passOffset = charsetReverse[((128 * 45) + (b11 >> 8) & 0xff)]; \
                                                                                          b11 &= 0xffff00ff;\
                                                                                          passOffset++;\
                                                                                          b11 |= (uint32_t)(charsetForward[(128 * 45) + passOffset] << 8);\
                                                                                          if (passOffset >= charsetLengths[45]) { \
                                                                                            b11 &= 0xffff00ff;\
                                                                                            b11 |= (uint32_t)(charsetForward[(128 * 45)] << 8);\
                                                                                            passOffset = charsetReverse[((128 * 46) + (b11 >> 16) & 0xff)]; \
                                                                                            b11 &= 0xff00ffff;\
                                                                                            passOffset++;\
                                                                                            b11 |= (uint32_t)(charsetForward[(128 * 46) + passOffset] << 16);\
                                                                                            if (passOffset >= charsetLengths[46]) { \
                                                                                              b11 &= 0xff00ffff;\
                                                                                              b11 |= (uint32_t)(charsetForward[(128 * 46)] << 16);\
                                                                                              passOffset = charsetReverse[((128 * 47) + (b11 >> 24) & 0xff)]; \
                                                                                              b11 &= 0x00ffffff;\
                                                                                              passOffset++;\
                                                                                              b11 |= (uint32_t)(charsetForward[(128 * 47) + passOffset] << 24);\
                                                                                              if (passOffset >= charsetLengths[47]) { \
                                                                                                b11 &= 0x00ffffff;\
                                                                                                b11 |= (uint32_t)(charsetForward[(128 * 47)] << 24);\
} } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } 


